name: release

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync

      - name: Build Wheels
        run: uv build

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: dist/*

  windows:
    runs-on: windows-16-cores

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync

      - name: Build Wheels
        run: uv build

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: dist/*

  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync

      - name: Build Wheels
        run: uv build

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ linux, windows, macos ]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: wheels-linux
          path: dist

      - uses: actions/download-artifact@v5
        with:
          name: wheels-windows
          path: dist

      - uses: actions/download-artifact@v5
        with:
          name: wheels-macos
          path: dist

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/*

  publish-pyx:
    name: Release to pyx
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=8cpu-linux-x64
    needs: [ linux, windows, macos ]
    permissions:
      contents: read
    env:
      PYX_API_KEY: ${{ secrets.PYX_TOKEN }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          path: dist
      - name: Install uv (with pyx support)
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: "Publish to pyx"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Publish all built wheels to the configured index
          uv publish --publish-url https://api.pyx.dev/v1/upload/zoo/main --trusted-publishing=never dist/*