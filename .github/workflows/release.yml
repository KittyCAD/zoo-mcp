name: release

on:
  push:
    tags:
      - '*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --dev

      - name: Build Wheels
        run: uv build --wheel

      - name: Upload wheels
        uses: actions/upload-artifact@v5
        with:
          name: wheels
          path: dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build ]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v6
        with:
          name: wheels
          path: dist

      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/*

  publish-pyx:
    name: Publish to pyx
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=8cpu-linux-x64
    needs: [ build ]
    permissions:
      contents: read
    env:
      PYX_API_KEY: ${{ secrets.PYX_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download wheels
        uses: actions/download-artifact@v6
        with:
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: "Publish to pyx"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Publish all built wheels to the configured index
          uv publish --publish-url https://api.pyx.dev/v1/upload/zoo/main --trusted-publishing=never dist/*

  publish-pypi:
    name: Publish to pypi
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=8cpu-linux-x64
    needs: [ build ]
    permissions:
      contents: read
    env:
      UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download wheels
        uses: actions/download-artifact@v6
        with:
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: "Publish to pypi"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Publish all built wheels to the configured index
          uv publish --trusted-publishing=never dist/*